# knux's nanorc

set tabsize 4
set smooth
set softwrap
set linenumbers
unset mouse
set atblanks
set showcursor
set nohelp
set morespace
set constantshow
set zap

# keybindings
bind ^X exit all
bind ^S savefile all
bind ^F whereis all
bind ^C cancel all
bind ^C copy main
bind ^K cut all
bind ^V paste all
bind ^L linter all
bind ^Z undo all
bind ^Y redo all
bind M-U undo all
bind M-Y redo all

# colors
set titlecolor normal,normal
set statuscolor normal,normal
set stripecolor normal,normal
set selectedcolor cyan,black
set functioncolor normal,normal
set keycolor normal,normal
set errorcolor brightred
set numbercolor ,normal

# general colors
syntax "configfiles" "\.*rc$"
color cyan "(^|[[:space:]])#.*$"

### syntax highlights ###

## nanorc
syntax "nanorc" "\.nanorc$"
comment "#"

color blue "(^|[[:space:]])#.*$"

color cyan "^set*"
color red "^syntax*"
color yellow "^color"
color blue "^unset"
color magenta "^bind"
# color spam!
color red "red *"
color green "green *"
color blue "blue *"
color yellow "yellow *"
color cyan "cyan *"
color magenta "magenta *"
color black,white "black *"
color white "white *"
color brightred "brightred *"
color brightgreen "brightgreen *"
color brightblue "brightblue *"
color brightyellow "brightyellow *"
color brightcyan "brightcyan *"
color brightmagenta "brightmagenta *"
color brightblack,white "brightblack *"

#
# syntax highlights. copied from scopatz/nanorc @ github
#
syntax "Markdown" "\.(md|mkd|mkdn|markdown)$"

# Tables (Github extension)
color cyan ".*[ :]\|[ :].*"

# quotes
color red  start="^>" end="^$"
color red  "^>.*"

# Emphasis
color green "(^|[[:space:]])(_[^ ][^_]*_|\*[^ ][^*]*\*)"

# Strong emphasis
color brightgreen "(^|[[:space:]])(__[^ ][^_]*__|\*\*[^ ][^*]*\*\*)"

# strike-through
color red "(^|[[:space:]])~~[^ ][^~]*~~"

# horizontal rules
color brightmagenta "^(---+|===+|___+|\*\*\*+)\s*$"

# headlines
color brightmagenta  "^#{1,2}.*"
color magenta  "^#{3,6}.*"

# lists
color blue   "^[[:space:]]*[\*+-] |^[[:space:]]*[0-9]+\. "

# leading whitespace
color black    "^[[:space:]]+"

# misc
color magenta   "\(([CcRr]|[Tt][Mm])\)" "\.{3}" "(^|[[:space:]])\-\-($|[[:space:]])"

# links
color brightblue "\[[^]]+\]"
color brightblue "\[([^][]|\[[^]]*\])*\]\([^)]+\)"

# images
color magenta "!\[[^][]*\](\([^)]+\)|\[[^]]+\])"

# urls
color brightyellow "https?://[^ )>]+"

# code
color yellow   "`[^`]*`|^ {4}[^-+*].*"
# code blocks
color yellow start="^```[^$]" end="^```$"
color yellow "^```$"

## Trailing spaces
color ,green "[[:space:]]+$"

## Here is an example for Bourne shell scripts.
##
syntax "SH" "\.sh$" "\.bashrc" "bashrc" "\.bash_aliases" "bash_aliases" "\.bash_functions" "bash_functions" "\.bash_profile" "bash_profile" "revise\..+$"
header "^#!.*/(env +)?(ba)?sh( |$)"
linter shellcheck

color green "\<(case|do|done|elif|else|esac|exit|fi|for|function|if|in|local|read|return|select|shift|then|time|until|while)\>"
color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
color green "-[Ldefgruwx]\>"
color green "-(eq|ne|gt|lt|ge|le|s|n|z)\>"
color brightblue "\<(cat|cd|chmod|chown|cp|echo|env|export|grep|install|let|ln|make|mkdir|mv|rm|sed|set|tar|touch|umask|unset)\>"
icolor brightgreen "^\s+[0-9A-Z_]+\s+\(\)"
icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
color cyan "(^|[[:space:]])#.*$"
color ,green "[[:space:]]+$"

## HTML syntax highlighting rules for Nano

syntax "HTML" "\.html?(.j2)?$"
magic "HTML document"
comment "<!--|-->"

## Emphasis tags
color brightwhite start="<([biu]|em|strong)[^>]*>" end="</([biu]|em|strong)>"

## Tags
color cyan start="<" end=">"

## Attributes
color brightblue "[[:space:]](abbr|accept(-charset)?|accesskey|action|[av]?link|alt|archive|axis|background|(bg)?color|border)="
color brightblue "[[:space:]](cell(padding|spacing)|char(off|set)?|checked|cite|class(id)?|compact|code(base|tag)?|cols(pan)?)="
color brightblue "[[:space:]](content(editable)?|contextmenu|coords|data|datetime|declare|defer|dir|enctype)="
color brightblue "[[:space:]](for|frame(border)?|headers|height|hidden|href(lang)?|hspace|http-equiv|id|ismap)="
color brightblue "[[:space:]](label|lang|longdesc|margin(height|width)|maxlength|media|method|multiple)="
color brightblue "[[:space:]](name|nohref|noresize|noshade|object|on(click|focus|load|mouseover|keypress)|profile|readonly|rel|rev)="
color brightblue "[[:space:]](rows(pan)?|rules|scheme|scope|scrolling|shape|size|span|src|standby|start|style|summary|pattern)="
color brightblue "[[:space:]](tabindex|target|text|title|type|usemap|v?align|value(type)?|vspace|width|xmlns|xml:space)="
color brightblue "[[:space:]](required|disabled|selected)[[:space:]=>]"

## Strings
color yellow ""(\\.|[^"])*""

## Named character references and entities
color red "&#?[[:alnum:]]*;"

## Template strings (not in the HTML spec, but very commonly used)
color magenta "\{[^\}]*\}"
color brightgreen "[[:space:]]((end)?if|(end)?for|in|not|(end)?block)[[:space:]]"

## Comments
color green start="<!--" end="-->"

## Trailing spaces
color ,green "[[:space:]]+$"

## Reminders
color brightwhite,yellow "(FIXME|TODO|XXX)"

## Here is an example for css files.
##

syntax "CSS" "\.(css|scss)$"
color brightred     "."
color brightyellow  start="\{" end="\}"
color brightwhite   start=":" end="[;^\{]"
color brightblue    ":active|:focus|:hover|:link|:visited|:link|:after|:before|$"
color brightblue    start="\/\*" end="\*\/"
color green         ";|:|\{|\}"

## Trailing spaces
color ,green "[[:space:]]+$"

## Here is an example for C/C++.
##
syntax "C" "\.(c(c|pp|xx)?|C)$" "\.(h(h|pp|xx)?|H)$" "\.ii?$" "\.(def)$"
color brightred "\<[A-Z_][0-9A-Z_]+\>" 
color green "\<(float|double|bool|char|wchar_t|int|short|long|sizeof|enum|void|static|const|struct|union|typedef|extern|(un)?signed|inline)\>"
color green "\<((s?size)|(char(16|32))|((u_?)?int(8|16|32|64|ptr)))_t\>"
color green "\<(class|namespace|template|public|protected|private|typename|this|friend|virtual|using|mutable|volatile|register|explicit)\>"
color green "\<(for|if|while|do|else|case|default|switch)\>"
color green "\<(try|throw|catch|operator|new|delete)\>"
color green "\<((const|dynamic|reinterpret|static)_cast)\>"
color green "\<(alignas|alignof|asm|auto|compl|concept|constexpr|decltype|export|noexcept|nullptr|requires|static_assert|thread_local|typeid|override|final)\>"
color green "\<(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\>"
color brightmagenta "\<(goto|continue|break|return)\>"
color brightcyan "^[[:space:]]*#[[:space:]]*(define|include|(un|ifn?)def|endif|el(if|se)|if|warning|error)"
color brightmagenta "'([^'\]|(\\["'abfnrtv\\]))'" "'\\(([0-3]?[0-7]{1,2}))'" "'\\x[0-9A-Fa-f]{1,2}'"

##
## GCC builtins
color green "__attribute__[[:space:]]*\(\([^)]*\)\)" "__(aligned|asm|builtin|hidden|inline|packed|restrict|section|typeof|weak)__"

#Operator Color
color yellow "[.:;,+*|=!\%]" "<" ">" "/" "-" "&" 

#Parenthetical Color
color magenta "[(){}]" "\[" "\]"


##
## String highlighting.  You will in general want your comments and
## strings to come last, because syntax highlighting rules will be
## applied in the order they are read in.
color cyan "<[^= 	]*>" ""(\\.|[^"])*""
##
## This string is VERY resource intensive!
#color cyan start=""(\\.|[^"])*\\[[:space:]]*$" end="^(\\.|[^"])*""

## Comment highlighting
color brightblue "//.*"
color brightblue start="/\*" end="\*/"

## Trailing whitespace
color ,green "[[:space:]]+$"

## Python syntax highlighting rules for Nano

syntax "python" "\.py$"
header "^#!.*/(env +)?python[-0-9._]*( |$)"
magic "Python script"

## built-in objects
color cyan "\<(None|self|True|False)\>"
## built-in attributes
color cyan "\<(__builtin__|__dict__|__methods__|__members__|__class__|__bases__|__import__|__name__|__doc__|__self__|__debug__)\>"
## built-in functions
color cyan "\<(abs|append|apply|buffer|callable|chr|clear|close|closed|cmp|coerce|compile|complex|conjugate|copy|count|delattr|dir|divmod|eval|execfile|exec|extend|fileno|filter|float|flush|get|getattr|globals|has_key|hasattr|hash|hex|id|index|input|insert|int|intern|isatty|isinstance|issubclass|items|keys|len|list|locals|long|map|max|min|mode|name|oct|open|ord|pop|pow|print|range|raw_input|read|readline|readlines|reduce|reload|remove|repr|reverse|round|seek|setattr|slice|softspace|sort|str|tell|truncate|tuple|type|unichr|unicode|update|values|vars|write|writelines|xrange|zip)\>"
## built-in functions that were previously keywords
color brightblue "\<(print|exec)\>([[:space:]]|$)"
## special method names
color cyan "\<(__abs__|__add__|__and__|__call__|__cmp__|__coerce__|__complex__|__concat__|__contains__|__del__|__delattr__|__delitem__|__delslice__|__div__|__divmod__|__float__|__getattr__|__getitem__|__getslice__|__hash__|__hex__|__init__|__int__|__inv__|__invert__|__len__|__long__|__lshift__|__mod__|__mul__|__neg__|__nonzero__|__oct__|__or__|__pos__|__pow__|__radd__|__rand__|__rcmp__|__rdiv__|__rdivmod__|__repeat__|__repr__|__rlshift__|__rmod__|__rmul__|__ror__|__rpow__|__rrshift__|__rshift__|__rsub__|__rxor__|__setattr__|__setitem__|__setslice__|__str__|__sub__|__xor__)\>"
## exception classes
color cyan "\<(Exception|StandardError|ArithmeticError|LookupError|EnvironmentError|AssertionError|AttributeError|EOFError|FloatingPointError|IOError|ImportError|IndexError|KeyError|KeyboardInterrupt|MemoryError|NameError|NotImplementedError|OSError|OverflowError|RuntimeError|SyntaxError|SystemError|SystemExit|TypeError|UnboundLocalError|UnicodeError|ValueError|WindowsError|ZeroDivisionError)\>"
## types
color brightcyan "\<(NoneType|TypeType|IntType|LongType|FloatType|ComplexType|StringType|UnicodeType|BufferType|TupleType|ListType|DictType|FunctionType|LambdaType|CodeType|ClassType|UnboundMethodType|InstanceType|MethodType|BuiltinFunctionType|BuiltinMethodType|ModuleType|FileType|XRangeType|TracebackType|FrameType|SliceType|EllipsisType)\>"
## definitions
color brightcyan "def [a-zA-Z_0-9]+" 
## keywords
color brightblue "\<(and|as|assert|break|class|continue|def|del|elif|else|except|finally|for|from|global|if|import|in|is|lambda|map|not|or|pass|raise|return|try|with|while|yield)\>"

## decorators
color brightgreen "@.*[(]"

## operators
color magenta "[.:;,+*|=!\%@]" "<" ">" "/" "-" "&"

## parentheses
color magenta "[(){}]" "\[" "\]"

## numbers
icolor brightyellow "\b(([1-9][0-9]+)|0+)\.[0-9]+j?\b" "\b([1-9][0-9]*[Lj]?)\b" "\b0o?[0-7]*L?\b" "\b0x[1-9a-f][0-9a-f]*L?\b" "\b0b[01]+\b"


## strings
color yellow "['][^']*[^\\][']" "[']{3}.*[^\\][']{3}"
color yellow "["][^"]*[^\\]["]" "["]{3}.*[^\\]["]{3}"

## comments
color green "^#.*|[[:space:]]#.*$"

## block comments
color yellow start=""""[^"]" end=""""" start="'''[^']" end="'''"

## trailing spaces
color ,green "[[:space:]]+$"

## reminders
color brightwhite,yellow "(FIXME|TODO|XXX)"

syntax "Makefile" "([Mm]akefile|\.ma?k)$"
header "^#!.*/(env +)?[bg]?make( |$)"

color cyan  "\<(ifeq|ifdef|ifneq|ifndef|else|endif)\>"
color cyan  "^(export|include|override)\>"
color brightmagenta  "^[^:=	]+:"
color brightmagenta  "^[^:+	]+\+"
color red "[=,%]" "\+=|\?=|:=|&&|\|\|"
color brightblue "\$\((abspath|addprefix|addsuffix|and|basename|call|dir)[[:space:]]"
color brightblue "\$\((error|eval|filter|filter-out|findstring|firstword)[[:space:]]"
color brightblue "\$\((flavor|foreach|if|info|join|lastword|notdir|or)[[:space:]]"
color brightblue "\$\((origin|patsubst|realpath|shell|sort|strip|suffix)[[:space:]]"
color brightblue "\$\((value|warning|wildcard|word|wordlist|words)[[:space:]]"
color blue "[()$]"
color yellow ""(\\.|[^"])*"|'(\\.|[^'])*'"
color brightyellow "\$+(\{[^} ]+\}|\([^) ]+\))"
color brightyellow "\$[@^<*?%|+]|\$\([@^<*?%+-][DF]\)"
color magenta   "\$\$|\\.?"
color blue "(^|[[:space:]])#([^{].*)?$"
color blue "^	@#.*"

# Show trailing whitespace
color ,green "[[:space:]]+$"
